{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatima\\\\Desktop\\\\React Projects\\\\my-app-1\\\\src\\\\components\\\\ProgrammersGrid.js\";\nimport React, { Component } from \"react\";\nimport ProgrammersCard from \"./ProgrammersCard\";\nimport Info from \"./memberInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProgrammersGrid extends Component {\n  constructor() {\n    super();\n    this.state = {\n      info: Info,\n      number: 0,\n      newList: [{\n        id: 100,\n        name: \"fatima\",\n        jop: \"programmer\",\n        phone: \"3445253\",\n        image: \"images/image1.webp\",\n        website: \"http//one\"\n      }]\n    };\n    this.addTOArray = this.addTOArray.bind(this);\n    this.mapping = this.mapping.bind(this);\n  }\n  addTOArray() {\n    const {\n      number,\n      newList,\n      info\n    } = this.state;\n    if (number !== info.length) {\n      this.setState(prev => {\n        return {\n          number: prev.number + 1,\n          newList: [...prev.newList, info[prev.number]]\n        };\n      });\n      console.log(newList);\n      return this.mapping(newList);\n    }\n  }\n  mapping(x) {\n    const members = x.map(member => /*#__PURE__*/_jsxDEV(ProgrammersCard, {\n      name: member.name,\n      jop: member.jop,\n      phone: member.phone,\n      image: member.image,\n      website: member.website\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this));\n    return members;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center ms-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-info\",\n        onClick: this.addTOArray,\n        children: [\"hi\", \"...................................\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), this.addTOArray(this.state.newList)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default ProgrammersGrid;","map":{"version":3,"names":["React","Component","ProgrammersCard","Info","jsxDEV","_jsxDEV","ProgrammersGrid","constructor","state","info","number","newList","id","name","jop","phone","image","website","addTOArray","bind","mapping","length","setState","prev","console","log","x","members","map","member","fileName","_jsxFileName","lineNumber","columnNumber","render","className","children","type","onClick"],"sources":["C:/Users/fatima/Desktop/React Projects/my-app-1/src/components/ProgrammersGrid.js"],"sourcesContent":["  import React, { Component } from \"react\";\r\n  import ProgrammersCard from \"./ProgrammersCard\";\r\n  import Info from \"./memberInfo\";\r\n\r\n  class ProgrammersGrid extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        info:Info,\r\n        number:0,\r\n        newList:[{\r\n          id: 100,\r\n          name: \"fatima\",\r\n          jop: \"programmer\",\r\n          phone: \"3445253\",\r\n          image:\"images/image1.webp\",\r\n          website: \"http//one\",\r\n        }]\r\n        };\r\n        this.addTOArray = this.addTOArray.bind(this);\r\n        this.mapping = this.mapping.bind(this);\r\n\r\n    }\r\n    addTOArray(){\r\n      const {number,newList,info}=this.state;\r\n      if (number!==info.length)\r\n    { this.setState((prev) => {\r\n          return { number: prev.number +1 ,\r\n            newList:[...prev.newList,info[prev.number]]};\r\n        });\r\n        console.log(newList\r\n        \r\n\r\n        )\r\n  return this.mapping(newList);\r\n\r\n      }\r\n    }\r\n    mapping(x) {\r\n      const members = x.map((member) => (\r\n        <ProgrammersCard\r\n          key={member.id}\r\n          name={member.name}\r\n          jop={member.jop}\r\n          phone={member.phone}\r\n          image={member.image}\r\n          website={member.website}\r\n        />\r\n      ));\r\n      return members;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"row justify-content-md-center ms-6\">\r\n        \r\n          <button type=\"button\" className=\"btn btn-info\" onClick={this.addTOArray}>\r\n            {\"hi\"}...................................\r\n          </button>\r\n          {this.addTOArray(this.state.newList)}\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default ProgrammersGrid;\r\n"],"mappings":";AAAE,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,SAASL,SAAS,CAAC;EACtCM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAACN,IAAI;MACTO,MAAM,EAAC,CAAC;MACRC,OAAO,EAAC,CAAC;QACPC,EAAE,EAAE,GAAG;QACPC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,YAAY;QACjBC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAC,oBAAoB;QAC1BC,OAAO,EAAE;MACX,CAAC;IACD,CAAC;IACD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACD,IAAI,CAAC,IAAI,CAAC;EAE1C;EACAD,UAAUA,CAAA,EAAE;IACV,MAAM;MAACR,MAAM;MAACC,OAAO;MAACF;IAAI,CAAC,GAAC,IAAI,CAACD,KAAK;IACtC,IAAIE,MAAM,KAAGD,IAAI,CAACY,MAAM,EAC1B;MAAE,IAAI,CAACC,QAAQ,CAAEC,IAAI,IAAK;QACpB,OAAO;UAAEb,MAAM,EAAEa,IAAI,CAACb,MAAM,GAAE,CAAC;UAC7BC,OAAO,EAAC,CAAC,GAAGY,IAAI,CAACZ,OAAO,EAACF,IAAI,CAACc,IAAI,CAACb,MAAM,CAAC;QAAC,CAAC;MAChD,CAAC,CAAC;MACFc,OAAO,CAACC,GAAG,CAACd,OAGZ,CAAC;MACP,OAAO,IAAI,CAACS,OAAO,CAACT,OAAO,CAAC;IAExB;EACF;EACAS,OAAOA,CAACM,CAAC,EAAE;IACT,MAAMC,OAAO,GAAGD,CAAC,CAACE,GAAG,CAAEC,MAAM,iBAC3BxB,OAAA,CAACH,eAAe;MAEdW,IAAI,EAAEgB,MAAM,CAAChB,IAAK;MAClBC,GAAG,EAAEe,MAAM,CAACf,GAAI;MAChBC,KAAK,EAAEc,MAAM,CAACd,KAAM;MACpBC,KAAK,EAAEa,MAAM,CAACb,KAAM;MACpBC,OAAO,EAAEY,MAAM,CAACZ;IAAQ,GALnBY,MAAM,CAACjB,EAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACF,CAAC;IACF,OAAON,OAAO;EAChB;EAEAO,MAAMA,CAAA,EAAG;IACP,oBACE7B,OAAA;MAAK8B,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBAEjD/B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,cAAc;QAACG,OAAO,EAAE,IAAI,CAACpB,UAAW;QAAAkB,QAAA,GACrE,IAAI,EAAC,qCACR;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACf,UAAU,CAAC,IAAI,CAACV,KAAK,CAACG,OAAO,CAAC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjC,CAAC;EAEV;AACF;AACA,eAAe3B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}