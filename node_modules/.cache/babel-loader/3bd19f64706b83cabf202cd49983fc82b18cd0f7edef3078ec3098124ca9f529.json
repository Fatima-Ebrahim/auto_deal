{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatima\\\\Desktop\\\\React Projects\\\\my-app-1\\\\src\\\\components\\\\ProgrammersGrid.js\";\nimport React, { Component } from \"react\";\nimport ProgrammersCard from \"./ProgrammersCard\";\nimport Info from \"./memberInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProgrammersGrid extends Component {\n  constructor() {\n    super();\n    this.state = {\n      info: Info,\n      number: 0,\n      newList: []\n    };\n    this.addTOArray = this.addTOArray.bind(this);\n    this.mapping = this.mapping.bind(this);\n  }\n  addTOArray() {\n    const {\n      number,\n      newList,\n      info\n    } = this.state;\n    if (number < info.length) {\n      this.setState(prev => {\n        return {\n          number: prev.number + 1,\n          newList: [...prev.newList, info[prev.number]]\n        };\n      });\n      console.log(`new List ${number}`, newList);\n      // return this.mapping(newList);\n      // const members = newList.map((member) => (\n      //   <ProgrammersCard\n      //     key={member.id}\n      //     name={member.name}\n      //     jop={member.jop}\n      //     phone={member.phone}\n      //     image={member.image}\n      //     website={member.website}\n      //   />\n      // ));\n      // return members;\n    }\n  }\n  mapping(x) {\n    const members = x.map(member => /*#__PURE__*/_jsxDEV(ProgrammersCard, {\n      name: member.name,\n      jop: member.jop,\n      phone: member.phone,\n      image: member.image,\n      website: member.website\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n    return members;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center ms-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: {\n          mer: \"5px\"\n        },\n        className: \"btn btn-info\",\n        onClick: this.addTOArray,\n        children: [\"click to add member\", \"...................................\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), this.mapping(this.state.newList)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ProgrammersGrid;","map":{"version":3,"names":["React","Component","ProgrammersCard","Info","jsxDEV","_jsxDEV","ProgrammersGrid","constructor","state","info","number","newList","addTOArray","bind","mapping","length","setState","prev","console","log","x","members","map","member","name","jop","phone","image","website","id","fileName","_jsxFileName","lineNumber","columnNumber","render","className","children","type","style","mer","onClick"],"sources":["C:/Users/fatima/Desktop/React Projects/my-app-1/src/components/ProgrammersGrid.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ProgrammersCard from \"./ProgrammersCard\";\r\nimport Info from \"./memberInfo\";\r\n\r\nclass ProgrammersGrid extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      info: Info,\r\n      number: 0,\r\n      newList: [],\r\n    };\r\n    this.addTOArray = this.addTOArray.bind(this);\r\n    this.mapping = this.mapping.bind(this);\r\n  }\r\n  addTOArray() {\r\n    const { number, newList, info } = this.state;\r\n    if (number < info.length) {\r\n      this.setState((prev) => {\r\n        return {\r\n          number: prev.number + 1,\r\n          newList: [...prev.newList, info[prev.number]],\r\n        };\r\n      });\r\n      console.log(`new List ${number}`, newList);\r\n      // return this.mapping(newList);\r\n      // const members = newList.map((member) => (\r\n      //   <ProgrammersCard\r\n      //     key={member.id}\r\n      //     name={member.name}\r\n      //     jop={member.jop}\r\n      //     phone={member.phone}\r\n      //     image={member.image}\r\n      //     website={member.website}\r\n      //   />\r\n      // ));\r\n      // return members;\r\n    }\r\n  }\r\n  mapping(x) {\r\n    const members = x.map((member) => (\r\n      <ProgrammersCard\r\n        key={member.id}\r\n        name={member.name}\r\n        jop={member.jop}\r\n        phone={member.phone}\r\n        image={member.image}\r\n        website={member.website}\r\n      />\r\n    ));\r\n    return members;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row justify-content-md-center ms-6\">\r\n        <button\r\n          type=\"button\"\r\n          style={{ mer: \"5px\" }}\r\n          className=\"btn btn-info\"\r\n          onClick={this.addTOArray}\r\n        >\r\n          {\"click to add member\"}...................................\r\n        </button>\r\n        {this.mapping(this.state.newList)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProgrammersGrid;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,SAASL,SAAS,CAAC;EACtCM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAEN,IAAI;MACVO,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE;IACX,CAAC;IACD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACD,IAAI,CAAC,IAAI,CAAC;EACxC;EACAD,UAAUA,CAAA,EAAG;IACX,MAAM;MAAEF,MAAM;MAAEC,OAAO;MAAEF;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC5C,IAAIE,MAAM,GAAGD,IAAI,CAACM,MAAM,EAAE;MACxB,IAAI,CAACC,QAAQ,CAAEC,IAAI,IAAK;QACtB,OAAO;UACLP,MAAM,EAAEO,IAAI,CAACP,MAAM,GAAG,CAAC;UACvBC,OAAO,EAAE,CAAC,GAAGM,IAAI,CAACN,OAAO,EAAEF,IAAI,CAACQ,IAAI,CAACP,MAAM,CAAC;QAC9C,CAAC;MACH,CAAC,CAAC;MACFQ,OAAO,CAACC,GAAG,CAAC,YAAYT,MAAM,EAAE,EAAEC,OAAO,CAAC;MAC1C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF;EACAG,OAAOA,CAACM,CAAC,EAAE;IACT,MAAMC,OAAO,GAAGD,CAAC,CAACE,GAAG,CAAEC,MAAM,iBAC3BlB,OAAA,CAACH,eAAe;MAEdsB,IAAI,EAAED,MAAM,CAACC,IAAK;MAClBC,GAAG,EAAEF,MAAM,CAACE,GAAI;MAChBC,KAAK,EAAEH,MAAM,CAACG,KAAM;MACpBC,KAAK,EAAEJ,MAAM,CAACI,KAAM;MACpBC,OAAO,EAAEL,MAAM,CAACK;IAAQ,GALnBL,MAAM,CAACM,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACF,CAAC;IACF,OAAOZ,OAAO;EAChB;EAEAa,MAAMA,CAAA,EAAG;IACP,oBACE7B,OAAA;MAAK8B,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBACjD/B,OAAA;QACEgC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE;UAAEC,GAAG,EAAE;QAAM,CAAE;QACtBJ,SAAS,EAAC,cAAc;QACxBK,OAAO,EAAE,IAAI,CAAC5B,UAAW;QAAAwB,QAAA,GAExB,qBAAqB,EAAC,qCACzB;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACnB,OAAO,CAAC,IAAI,CAACN,KAAK,CAACG,OAAO,CAAC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAEV;AACF;AACA,eAAe3B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}