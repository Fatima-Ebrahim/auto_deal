{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatima\\\\Desktop\\\\React Projects\\\\my-app-1\\\\src\\\\components\\\\ProgrammersGrid.js\";\nimport React, { Component } from \"react\";\nimport ProgrammersCard from \"./ProgrammersCard\";\nimport Info from \"./memberInfo\";\nimport ListButton from \"./ListButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ProgrammersGrid extends Component {\n  constructor() {\n    super();\n    this.state = {\n      info: Info,\n      number: 0,\n      newArray: [{\n        id: 100,\n        name: \"fatima\",\n        jop: \"programmer\",\n        phone: \"3445253\",\n        image: \"images/image1.webp\",\n        website: \"http//one\"\n      }]\n    };\n  }\n  addTOArray() {\n    const {\n      number,\n      newList,\n      info\n    } = this.state;\n    if (number !== info.length) {\n      this.setState(prev => {\n        return {\n          number: prev.number + 1,\n          newList: [...prev.newList, info[prev.number]]\n        };\n      });\n      return this.mapping(newList);\n    }\n  }\n  mapping(x) {\n    const members = x.map(member => /*#__PURE__*/_jsxDEV(ProgrammersCard, {\n      name: member.name,\n      jop: member.jop,\n      phone: member.phone,\n      image: member.image,\n      website: member.website\n    }, member.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this));\n    return members;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center ms-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        class: \"btn btn-info\",\n        onClick: this.addTOArray,\n        children: [\"hi\", \"...................................\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), this.addTOArray(this.addTOArray())]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ProgrammersGrid;","map":{"version":3,"names":["React","Component","ProgrammersCard","Info","ListButton","jsxDEV","_jsxDEV","ProgrammersGrid","constructor","state","info","number","newArray","id","name","jop","phone","image","website","addTOArray","newList","length","setState","prev","mapping","x","members","map","member","fileName","_jsxFileName","lineNumber","columnNumber","render","className","children","type","class","onClick"],"sources":["C:/Users/fatima/Desktop/React Projects/my-app-1/src/components/ProgrammersGrid.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ProgrammersCard from \"./ProgrammersCard\";\r\nimport Info from \"./memberInfo\";\r\nimport ListButton from \"./ListButton\";\r\nclass ProgrammersGrid extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      info:Info,\r\n      number:0,\r\n      newArray:[{\r\n        id: 100,\r\n        name: \"fatima\",\r\n        jop: \"programmer\",\r\n        phone: \"3445253\",\r\n        image:\"images/image1.webp\",\r\n        website: \"http//one\",\r\n      }]\r\n      };\r\n  }\r\n  addTOArray(){\r\n    const {number,newList,info}=this.state;\r\n    if (number!==info.length)\r\n   { this.setState((prev) => {\r\n        return { number: prev.number +1 ,\r\n          newList:[...prev.newList,info[prev.number]]};\r\n      });\r\nreturn this.mapping(newList);\r\n\r\n    }\r\n  }\r\n  mapping(x) {\r\n    const members = x.map((member) => (\r\n      <ProgrammersCard\r\n        key={member.id}\r\n        name={member.name}\r\n        jop={member.jop}\r\n        phone={member.phone}\r\n        image={member.image}\r\n        website={member.website}\r\n      />\r\n    ));\r\n    return members;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row justify-content-md-center ms-6\">\r\n       \r\n        <button type=\"button\" class=\"btn btn-info\" onClick={this.addTOArray}>\r\n          {\"hi\"}...................................\r\n        </button>\r\n        {this.addTOArray(this.addTOArray())}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProgrammersGrid;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,eAAe,SAASN,SAAS,CAAC;EACtCO,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAACP,IAAI;MACTQ,MAAM,EAAC,CAAC;MACRC,QAAQ,EAAC,CAAC;QACRC,EAAE,EAAE,GAAG;QACPC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,YAAY;QACjBC,KAAK,EAAE,SAAS;QAChBC,KAAK,EAAC,oBAAoB;QAC1BC,OAAO,EAAE;MACX,CAAC;IACD,CAAC;EACL;EACAC,UAAUA,CAAA,EAAE;IACV,MAAM;MAACR,MAAM;MAACS,OAAO;MAACV;IAAI,CAAC,GAAC,IAAI,CAACD,KAAK;IACtC,IAAIE,MAAM,KAAGD,IAAI,CAACW,MAAM,EACzB;MAAE,IAAI,CAACC,QAAQ,CAAEC,IAAI,IAAK;QACrB,OAAO;UAAEZ,MAAM,EAAEY,IAAI,CAACZ,MAAM,GAAE,CAAC;UAC7BS,OAAO,EAAC,CAAC,GAAGG,IAAI,CAACH,OAAO,EAACV,IAAI,CAACa,IAAI,CAACZ,MAAM,CAAC;QAAC,CAAC;MAChD,CAAC,CAAC;MACR,OAAO,IAAI,CAACa,OAAO,CAACJ,OAAO,CAAC;IAExB;EACF;EACAI,OAAOA,CAACC,CAAC,EAAE;IACT,MAAMC,OAAO,GAAGD,CAAC,CAACE,GAAG,CAAEC,MAAM,iBAC3BtB,OAAA,CAACJ,eAAe;MAEdY,IAAI,EAAEc,MAAM,CAACd,IAAK;MAClBC,GAAG,EAAEa,MAAM,CAACb,GAAI;MAChBC,KAAK,EAAEY,MAAM,CAACZ,KAAM;MACpBC,KAAK,EAAEW,MAAM,CAACX,KAAM;MACpBC,OAAO,EAAEU,MAAM,CAACV;IAAQ,GALnBU,MAAM,CAACf,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACF,CAAC;IACF,OAAON,OAAO;EAChB;EAEAO,MAAMA,CAAA,EAAG;IACP,oBACE3B,OAAA;MAAK4B,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBAEjD7B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC,cAAc;QAACC,OAAO,EAAE,IAAI,CAACnB,UAAW;QAAAgB,QAAA,GACjE,IAAI,EAAC,qCACR;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAACb,UAAU,CAAC,IAAI,CAACA,UAAU,CAAC,CAAC,CAAC;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CAAC;EAEV;AACF;AACA,eAAezB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}